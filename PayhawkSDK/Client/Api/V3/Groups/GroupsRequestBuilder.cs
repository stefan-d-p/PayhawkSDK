// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using PayhawkSDK.Client.Api.V3.Groups.Item;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace PayhawkSDK.Client.Api.V3.Groups
{
    /// <summary>
    /// Builds and executes requests for operations under \api\v3\groups
    /// </summary>
    public class GroupsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the PayhawkSDK.Client.api.v3.groups.item collection</summary>
        /// <param name="position">Identifier of the Group</param>
        /// <returns>A <see cref="PayhawkSDK.Client.Api.V3.Groups.Item.WithGroupItemRequestBuilder"/></returns>
        public PayhawkSDK.Client.Api.V3.Groups.Item.WithGroupItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("groupId", position);
                return new PayhawkSDK.Client.Api.V3.Groups.Item.WithGroupItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="PayhawkSDK.Client.Api.V3.Groups.GroupsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public GroupsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/v3/groups", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="PayhawkSDK.Client.Api.V3.Groups.GroupsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public GroupsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/v3/groups", rawUrl)
        {
        }
    }
}
