// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace PayhawkSDK.Client.Models
{
    /// <summary>
    /// Purchase order item update request
    /// </summary>
    public class IPurchaseOrderPatch : IParsable
    {
        /// <summary>Currency of the purchase order</summary>
        public PayhawkSDK.Client.Models.IPurchaseOrderPatch_currency? Currency { get; set; }
        /// <summary>Note from the creator of the purchase order</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Note { get; set; }
#nullable restore
#else
        public string Note { get; set; }
#endif
        /// <summary>Expense category of the purchase order item</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public PayhawkSDK.Client.Models.IObjectReference? Supplier { get; set; }
#nullable restore
#else
        public PayhawkSDK.Client.Models.IObjectReference Supplier { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="PayhawkSDK.Client.Models.IPurchaseOrderPatch"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static PayhawkSDK.Client.Models.IPurchaseOrderPatch CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new PayhawkSDK.Client.Models.IPurchaseOrderPatch();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "currency", n => { Currency = n.GetEnumValue<PayhawkSDK.Client.Models.IPurchaseOrderPatch_currency>(); } },
                { "note", n => { Note = n.GetStringValue(); } },
                { "supplier", n => { Supplier = n.GetObjectValue<PayhawkSDK.Client.Models.IObjectReference>(PayhawkSDK.Client.Models.IObjectReference.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<PayhawkSDK.Client.Models.IPurchaseOrderPatch_currency>("currency", Currency);
            writer.WriteStringValue("note", Note);
            writer.WriteObjectValue<PayhawkSDK.Client.Models.IObjectReference>("supplier", Supplier);
        }
    }
}
