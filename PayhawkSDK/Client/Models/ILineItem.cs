// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace PayhawkSDK.Client.Models
{
    /// <summary>
    /// Line item object of an expense
    /// </summary>
    public class ILineItem : IParsable
    {
        /// <summary>Amortization information</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public PayhawkSDK.Client.Models.IAmortization? Amortization { get; set; }
#nullable restore
#else
        public PayhawkSDK.Client.Models.IAmortization Amortization { get; set; }
#endif
        /// <summary>Category name of the line item</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Category { get; set; }
#nullable restore
#else
        public string Category { get; set; }
#endif
        /// <summary>Category id of the line item</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CategoryId { get; set; }
#nullable restore
#else
        public string CategoryId { get; set; }
#endif
        /// <summary>Unique identifier of the line item</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Note for the line item</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Note { get; set; }
#nullable restore
#else
        public string Note { get; set; }
#endif
        /// <summary>Reconciliation details</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public PayhawkSDK.Client.Models.IReconciliation? Reconciliation { get; set; }
#nullable restore
#else
        public PayhawkSDK.Client.Models.IReconciliation Reconciliation { get; set; }
#endif
        /// <summary>Tax rate object without autogenerated fields</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public PayhawkSDK.Client.Models.INewTaxRate? TaxRate { get; set; }
#nullable restore
#else
        public PayhawkSDK.Client.Models.INewTaxRate TaxRate { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="PayhawkSDK.Client.Models.ILineItem"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static PayhawkSDK.Client.Models.ILineItem CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new PayhawkSDK.Client.Models.ILineItem();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amortization", n => { Amortization = n.GetObjectValue<PayhawkSDK.Client.Models.IAmortization>(PayhawkSDK.Client.Models.IAmortization.CreateFromDiscriminatorValue); } },
                { "category", n => { Category = n.GetStringValue(); } },
                { "categoryId", n => { CategoryId = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "note", n => { Note = n.GetStringValue(); } },
                { "reconciliation", n => { Reconciliation = n.GetObjectValue<PayhawkSDK.Client.Models.IReconciliation>(PayhawkSDK.Client.Models.IReconciliation.CreateFromDiscriminatorValue); } },
                { "taxRate", n => { TaxRate = n.GetObjectValue<PayhawkSDK.Client.Models.INewTaxRate>(PayhawkSDK.Client.Models.INewTaxRate.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<PayhawkSDK.Client.Models.IAmortization>("amortization", Amortization);
            writer.WriteStringValue("category", Category);
            writer.WriteStringValue("categoryId", CategoryId);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("note", Note);
            writer.WriteObjectValue<PayhawkSDK.Client.Models.IReconciliation>("reconciliation", Reconciliation);
            writer.WriteObjectValue<PayhawkSDK.Client.Models.INewTaxRate>("taxRate", TaxRate);
        }
    }
}
