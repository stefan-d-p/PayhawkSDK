// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace PayhawkSDK.Client.Models
{
    /// <summary>
    /// Purchase order item object
    /// </summary>
    public class IPurchaseOrderItem : IParsable
    {
        /// <summary>Amortization information</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public PayhawkSDK.Client.Models.IAmortization? Amortization { get; set; }
#nullable restore
#else
        public PayhawkSDK.Client.Models.IAmortization Amortization { get; set; }
#endif
        /// <summary>Date the purchase order was created</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>User-friendly description of the purchase order item</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Expense category of the purchase order item</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public PayhawkSDK.Client.Models.IObjectReference? ExpenseCategory { get; set; }
#nullable restore
#else
        public PayhawkSDK.Client.Models.IObjectReference ExpenseCategory { get; set; }
#endif
        /// <summary>Custom fields of the purchase order item</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<PayhawkSDK.Client.Models.ICustomFieldData>? ExpenseCustomFields { get; set; }
#nullable restore
#else
        public List<PayhawkSDK.Client.Models.ICustomFieldData> ExpenseCustomFields { get; set; }
#endif
        /// <summary>Unique identifier of the purchase order</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Quantity of the purchase order item</summary>
        public float? PurchasedQuantity { get; set; }
        /// <summary>Status of the purchase order item quantity</summary>
        public PayhawkSDK.Client.Models.IPurchaseOrderItem_quantityStatus? QuantityStatus { get; set; }
        /// <summary>Aggregated amount of all receipt notes, representing the total received items</summary>
        public float? ReceivedQuantity { get; set; }
        /// <summary>Total amount of the purchase order item</summary>
        public float? TotalPurchasedAmount { get; set; }
        /// <summary>Type of the purchase order item</summary>
        public PayhawkSDK.Client.Models.IPurchaseOrderItem_type? Type { get; set; }
        /// <summary>Price of the purchase order item unit</summary>
        public float? UnitPrice { get; set; }
        /// <summary>Unit of the purchase order item</summary>
        public PayhawkSDK.Client.Models.IPurchaseOrderItem_units? Units { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="PayhawkSDK.Client.Models.IPurchaseOrderItem"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static PayhawkSDK.Client.Models.IPurchaseOrderItem CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new PayhawkSDK.Client.Models.IPurchaseOrderItem();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amortization", n => { Amortization = n.GetObjectValue<PayhawkSDK.Client.Models.IAmortization>(PayhawkSDK.Client.Models.IAmortization.CreateFromDiscriminatorValue); } },
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "expenseCategory", n => { ExpenseCategory = n.GetObjectValue<PayhawkSDK.Client.Models.IObjectReference>(PayhawkSDK.Client.Models.IObjectReference.CreateFromDiscriminatorValue); } },
                { "expenseCustomFields", n => { ExpenseCustomFields = n.GetCollectionOfObjectValues<PayhawkSDK.Client.Models.ICustomFieldData>(PayhawkSDK.Client.Models.ICustomFieldData.CreateFromDiscriminatorValue)?.ToList(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "purchasedQuantity", n => { PurchasedQuantity = n.GetFloatValue(); } },
                { "quantityStatus", n => { QuantityStatus = n.GetEnumValue<PayhawkSDK.Client.Models.IPurchaseOrderItem_quantityStatus>(); } },
                { "receivedQuantity", n => { ReceivedQuantity = n.GetFloatValue(); } },
                { "totalPurchasedAmount", n => { TotalPurchasedAmount = n.GetFloatValue(); } },
                { "type", n => { Type = n.GetEnumValue<PayhawkSDK.Client.Models.IPurchaseOrderItem_type>(); } },
                { "unitPrice", n => { UnitPrice = n.GetFloatValue(); } },
                { "units", n => { Units = n.GetEnumValue<PayhawkSDK.Client.Models.IPurchaseOrderItem_units>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<PayhawkSDK.Client.Models.IAmortization>("amortization", Amortization);
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteStringValue("description", Description);
            writer.WriteObjectValue<PayhawkSDK.Client.Models.IObjectReference>("expenseCategory", ExpenseCategory);
            writer.WriteCollectionOfObjectValues<PayhawkSDK.Client.Models.ICustomFieldData>("expenseCustomFields", ExpenseCustomFields);
            writer.WriteStringValue("id", Id);
            writer.WriteFloatValue("purchasedQuantity", PurchasedQuantity);
            writer.WriteEnumValue<PayhawkSDK.Client.Models.IPurchaseOrderItem_quantityStatus>("quantityStatus", QuantityStatus);
            writer.WriteFloatValue("receivedQuantity", ReceivedQuantity);
            writer.WriteFloatValue("totalPurchasedAmount", TotalPurchasedAmount);
            writer.WriteEnumValue<PayhawkSDK.Client.Models.IPurchaseOrderItem_type>("type", Type);
            writer.WriteFloatValue("unitPrice", UnitPrice);
            writer.WriteEnumValue<PayhawkSDK.Client.Models.IPurchaseOrderItem_units>("units", Units);
        }
    }
}
