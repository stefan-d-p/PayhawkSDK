// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace PayhawkSDK.Client.Models
{
    /// <summary>
    /// Based on the status this object may represent either the person who approved the PO or the one who rejected/returned it.
    /// </summary>
    public class IPurchaseOrder_approvalProcessState : IParsable
    {
        /// <summary>Date on which the purchase order has been approved/rejected/returned.</summary>
        public DateTimeOffset? Date { get; set; }
        /// <summary>The person who approved/rejected/returned the purchase order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public PayhawkSDK.Client.Models.IBasicActor? ModifiedBy { get; set; }
#nullable restore
#else
        public PayhawkSDK.Client.Models.IBasicActor ModifiedBy { get; set; }
#endif
        /// <summary>Reason for rejecting/returning the purchase order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Reason { get; set; }
#nullable restore
#else
        public string Reason { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="PayhawkSDK.Client.Models.IPurchaseOrder_approvalProcessState"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static PayhawkSDK.Client.Models.IPurchaseOrder_approvalProcessState CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new PayhawkSDK.Client.Models.IPurchaseOrder_approvalProcessState();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "date", n => { Date = n.GetDateTimeOffsetValue(); } },
                { "modifiedBy", n => { ModifiedBy = n.GetObjectValue<PayhawkSDK.Client.Models.IBasicActor>(PayhawkSDK.Client.Models.IBasicActor.CreateFromDiscriminatorValue); } },
                { "reason", n => { Reason = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("date", Date);
            writer.WriteObjectValue<PayhawkSDK.Client.Models.IBasicActor>("modifiedBy", ModifiedBy);
            writer.WriteStringValue("reason", Reason);
        }
    }
}
