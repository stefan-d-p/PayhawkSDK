// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace PayhawkSDK.Client.Models
{
    /// <summary>
    /// Expense workflow details
    /// </summary>
    public class IExpenseWorkflowStatus : IParsable
    {
        /// <summary>Approval status of the expense</summary>
        public PayhawkSDK.Client.Models.IExpenseWorkflowStatus_approvalStatus? ApprovalStatus { get; set; }
        /// <summary>Date the expense was last approved</summary>
        public DateTimeOffset? ApprovedAt { get; set; }
        /// <summary>Actor user that last approved the expense</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public PayhawkSDK.Client.Models.IActor? ApprovedBy { get; set; }
#nullable restore
#else
        public PayhawkSDK.Client.Models.IActor ApprovedBy { get; set; }
#endif
        /// <summary>Date the expense was last reviewed</summary>
        public DateTimeOffset? ReviewedAt { get; set; }
        /// <summary>Actor user that last approved the expense</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public PayhawkSDK.Client.Models.IActor? ReviewedBy { get; set; }
#nullable restore
#else
        public PayhawkSDK.Client.Models.IActor ReviewedBy { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="PayhawkSDK.Client.Models.IExpenseWorkflowStatus"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static PayhawkSDK.Client.Models.IExpenseWorkflowStatus CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new PayhawkSDK.Client.Models.IExpenseWorkflowStatus();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "approvalStatus", n => { ApprovalStatus = n.GetEnumValue<PayhawkSDK.Client.Models.IExpenseWorkflowStatus_approvalStatus>(); } },
                { "approvedAt", n => { ApprovedAt = n.GetDateTimeOffsetValue(); } },
                { "approvedBy", n => { ApprovedBy = n.GetObjectValue<PayhawkSDK.Client.Models.IActor>(PayhawkSDK.Client.Models.IActor.CreateFromDiscriminatorValue); } },
                { "reviewedAt", n => { ReviewedAt = n.GetDateTimeOffsetValue(); } },
                { "reviewedBy", n => { ReviewedBy = n.GetObjectValue<PayhawkSDK.Client.Models.IActor>(PayhawkSDK.Client.Models.IActor.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<PayhawkSDK.Client.Models.IExpenseWorkflowStatus_approvalStatus>("approvalStatus", ApprovalStatus);
            writer.WriteDateTimeOffsetValue("approvedAt", ApprovedAt);
            writer.WriteObjectValue<PayhawkSDK.Client.Models.IActor>("approvedBy", ApprovedBy);
            writer.WriteDateTimeOffsetValue("reviewedAt", ReviewedAt);
            writer.WriteObjectValue<PayhawkSDK.Client.Models.IActor>("reviewedBy", ReviewedBy);
        }
    }
}
